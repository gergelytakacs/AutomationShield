name: Build (Arduino)

# The workflow will run on every push and pull request to the repository
on:
  - push
  - pull_request
env:
  # It's convenient to set variables for values used multiple times in the workflow
  SKETCHES_REPORTS_PATH: sketches-reports
  SKETCHES_REPORTS_ARTIFACT_NAME: sketches-reports

jobs:
  compile-sketch:
    runs-on: ubuntu-latest
    
    strategy:
      max-parallel: 6
      matrix:
        fqbn:
          - arduino:avr:uno
          - arduino:avr:mega
          #- arduino:avr:leonardo # Look at sampling for testing
          #- arduino:avr:unowifi # Look at sampling for testing
          - arduino:sam:arduino_due_x
          - arduino:samd:arduino_zero_native
      fail-fast: false
          
    steps:
      # This step makes the contents of the repository available to the workflow
      - name: Checkout repository
        uses: actions/checkout@v4
      - name: Checkout submodules
        run: git submodule update --init --recursive

      # For more information: https://github.com/arduino/compile-sketches#readme
      - name: Build (Arduino)
        uses: arduino/compile-sketches@v1.1.0
        with:
          fqbn: ${{ matrix.fqbn }}
          sketch-paths: |
            # Configure the action to search all folders under the root of the repository for sketches and compile them.
            # This is formatted as a YAML list, which makes it possible to have multiple sketch paths if needed.
            - examples
          libraries: |
            # Install self as source
            - source-path: ./
            - name: Servo
          enable-deltas-report: true
          sketches-report-path: ${{ env.SKETCHES_REPORTS_PATH }}
          
  # This step is needed to pass the size data to the report job 
      - name: Upload sketches report to workflow artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}

  # When using a matrix to compile for multiple boards, it's necessary to use a separate job for the deltas report
  report:
    needs: compile-sketch  # Wait for the compile job to finish to get the data for the report
    if: github.event_name == 'pull_request' # Only run the job when the workflow is triggered by a pull request
    runs-on: ubuntu-latest
    steps:
      # This step is needed to get the size data produced by the compile jobs
      - name: Download sketches reports artifact
        uses: actions/download-artifact@v3
        with:
          name: ${{ env.SKETCHES_REPORTS_ARTIFACT_NAME }}
          path: ${{ env.SKETCHES_REPORTS_PATH }}

      - uses: arduino/report-size-deltas@v1
        with:
          sketches-reports-source: ${{ env.SKETCHES_REPORTS_PATH }}
